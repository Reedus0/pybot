version: '3.8'
services:
  bot:
    build: 
      context: ./bot
    environment:
      TOKEN: ${TOKEN}
      RM_HOST: ${RM_HOST}
      RM_PORT: ${RM_PORT}
      RM_USER: ${RM_USER}
      RM_PASSWORD: ${RM_PASSWORD}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      LOG_PATH: ${LOG_PATH}
      LOG_FILE_NAME: ${LOG_FILE_NAME}
    depends_on:
      - db_host
    volumes:
      - ./logs:/app/logs
    networks:
      - default

  db_host:
    build: 
      context: ./db
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: "trust\nhost replication ${DB_REPL_USER} 0.0.0.0/0 trust"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./logs:/var/log/postgresql
    networks:
      - default

  db_repl_host:
    build: 
      context: ./db_repl
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGUSER: ${DB_REPL_USER}
      PGPASSWORD: ${DB_REPL_PASSWORD}
    depends_on:
      - db_host
      - bot
    volumes:
      - ./db_repl/replication.sh:/docker-entrypoint-initdb.d/replication.sh
    networks:
      - default

networks:
  default:
    driver: bridge